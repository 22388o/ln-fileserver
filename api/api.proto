syntax = "proto3";

package api;

service PrivateFileStore {
    rpc GetInfo(GetInfoRequest) returns (GetInfoResponse);
    rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);
    rpc UploadFile (stream UploadFileRequest) returns (stream UploadFileResponse);
    rpc DownloadFile(DownloadFileRequest) returns (stream DownloadFileResponse);
}
message GetInfoRequest {

}

message GetInfoResponse {
    FeeReport fee_report = 1;
}

message ListFilesRequest {

}
message ListFilesResponse {
    repeated FileSlot files = 1;
}
message UploadFileRequest {
    oneof event{
        NewFileSlot slot = 1;
        FileChunk chunk = 2;
        Empty finished = 3;
    }
}

message UploadFileResponse {
    oneof event {
        InvoiceResponse invoice = 1;
        FileSlot finished_file = 2;
    }
}

message DownloadFileRequest {
    string file_id = 1;
}

message DownloadFileResponse {
    oneof event {
        FileSlot file_info = 1;
        InvoiceResponse invoice = 2;
        FileChunk chunk = 3;
        Empty finished = 4;
    }
}

message FeeReport {
    int64 msat_base_cost = 1;
    int64 msat_per_hour_per_k_b = 2;
    int64 msat_per_downloaded_k_b = 3;
}

message FileSlot {
    string file_id = 1;
    string filename = 2;
    string description = 3;
    string sha_checksum = 4;
    int64 bytes = 5;
    int64 creation_date = 6;
    int64 deletion_date = 7;
}

message NewFileSlot {
    int64 deletion_date = 1;
    string filename = 2;
    string description = 3;
}

message FileChunk {
    bytes content = 1;
}

message InvoiceResponse {
    string invoice = 1;
}

message Empty {}